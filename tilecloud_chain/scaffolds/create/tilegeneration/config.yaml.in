grids:
    # grid name, I just recommands to add the min resoblution because it's common to not generate all the layers at the same resolution.
    swissgrid_05:
        # scale used to work with work internaly with integer resolutions [default to 1]
        resolution_scale: 10
        # resolutions [required]
        resolutions: [1000, 500, 250, 100, 50, 20, 10, 5, 2, 1, 0.5]
        # bbox [required]
        bbox: [420000, 30000, 900000, 350000]
        # srs [required]
        srs: epsg:21781
        # unit [default to 'm']
        unit: m
        # [optional, default to 256]
        tile_size: 256

caches:
    local:
        type: filesystem
        folder: /var/sig/tilecache
        # for GetCapabilities
        # can includes %(folder)s comes from this cache
        http_url: http://taurus/tiles
    s3:
        type: s3
        # the s3 bucket name
        bucket: tiles
        # the used folder in the bucket [default to '']
        folder: ''
        # for GetCapabilities
        # can includes %(bucket)s, %(folder)s and %(host)s comes from this cache
        http_url: https://%(host)s/%(bucket)s/%(folder)s
        hosts:
        - wmts0.<host>
        - wmts1.<host>
        - wmts2.<host>
        - wmts3.<host>
        - wmts4.<host>

# this defines some defaults values for all the layers
layer_default:
    # name of the grid to use (defined in grids)
    grid: swissgrid_05
    type: wms
    # the URL of the WMS server to used
    url: http://${facts:fdqn}/${vars:instanceid}/mapserv
    # file name extension
    extension: png
    # the bbox there we want to generate tiles
    #bbox: [493000, 114000, 586000, 204000]
    # mime type used for the WMS request and the WMTS capabilities generation
    mime_type: image/png
    wmts_style: default
    # the WMTS dimensions definition [default to []]
    dimensions:
        -   name: DATE
            # the default value for the WMTS capabilities
            default: 2012
            # the generated value
            value: 2012
            # all the available values in the WMTS capabilities
            values: [2012]
    # the meta tiles definition [default to off]
    meta: on
    # the meta tiles size [default to 8]
    meta_size: 8
    # the meta tiles buffer [default to 128]
    meta_buffer: 128
    # connexion an sql to get the geometry where we want to generate tiles
#    connection: user=www-data password=www-data dbname=<db> host=localhost
#    sql: ST_Buffer(ST_Union(geom), 10, 2) FROM <table>
    # size and hash used to detect empty tiles and metatiles [optional, default to None]
    # can be generate by (with en emty tile):
    # ./buildout/bin/generate_tiles --get-hash <z/x/y> -l <layer_name>
#    empty_metatile_detection:
#        size: 740
#        hash: 3237839c217b51b8a9644d596982f342f8041546
#    empty_tile_detection:
#        size: 921
#        hash: 1e3da153be87a493c4c71198366485f290cad43c
    cost:
        # default to 40 [ms]
        tileonly_generation_time: 40
        # default to 30 [ms]
        tile_generation_time: 30
        # default to 30 [ms]
        metatile_generation_time: 30
        # default to 20 [ko]
        tile_size: 20

layers:
    plan:
        layers: plan
    plan_color:
        layers: plan_color
    ortho:
        layers: ortho
        extension: jpeg
        mime_type: image/jpeg
        # no buffer needed on rater sources
        meta_buffer: 0
#        empty_metatile_detection:
#            size: 66163
#            hash: a9d16a1794586ef92129a2fb41a739451ed09914
#        empty_metatile_detection:
#            size: 1651
#            hash: 2892fea0a474228f5d66a534b0b5231d923696da
    mapnik:
        type: mapnik
        # buffer to gets the data
        # with mapnik it's better to use data_buffer than meta_buffer
        meta_buffer: 0
        data_buffer: 128
        mapfile: style.mapnik
        # the output_format used for the mapnik renderer, can be png, png256, jpeg, grid (grid_renderer)
        output_format: png
    grid:
        type: mapnik
        mapfile: style.mapnik
        output_format: grid
        extension: json
        # mime type used for the WMTS capabilities generation
        mime_type: application/utfgrid
        # UTFGrid resolution [px]
        resolution: 4
        # no metatiles (not supported for UTFGrid)
        meta: off
        data_buffer: 128
        # fields names to extort to the UTFGrid
        layers_fields:
            foo: [name]
            bar: [name, description]

generation:
    default_cache: local
    default_layers: [plan, plan_color, ortho]
    # used to allowed only a specific user to generate tiles (for rights issue)
    authorised_user: www-data

    # not already implemented [optional]
    number_process: 8
    # type of ec2 host, can be t1.micro, m1.small, m1.medium, m1.large, m1.xlarge, m2.xlarge, m2.2xlarge, m2.4xlarge, c1.medium, c1.xlarge, cc1.4xlarge, cc2.8xlarge, cg1.4xlarge, hi1.4xlarge, default is m1.medium
    ec2_host_type: m1.medium

    # not already implemented [defaut to 10]
    maxconsecutive_errors: 10

    # SSH options [default to '']
    ssh_options: ''

    # geodata folder to sync with the tile worker
    geodata_folder: /var/sig/package/

    # destination code folder to sync with the tile worker
    code_folder: /var/www/c2c_geoportal/private/{{package}}

    # [default to tilegeneration/deploy.cfg]
    deploy_config: tilegeneration/deploy.cfg
    # The user used to deploy [default to None]
    #deploy_user: deploy

    # [default to buildout_tilegeneration.cfg]
    buildout_config: buildout_tilegeneration.cfg

    # apache destination config file and content
    apache_config: /var/www/c2c_geoportal/conf/{{package}}.conf
    apache_content: Include /var/www/c2c_geoportal/private/{{package}}/apache/*.conf
    
    # disable geodata sync, not already implemented [default to no]
    disable_geodata: no
    # disable code deploy, not already implemented [default to no]
    disable_code: no
    # disable database deploy, not already implemented [default to no]
    disable_database: no
    # disable SQS tile queue filling , not already implemented [default to no]
    disable_fillqueue: no
    # disable tile generation, not already implemented [default to no]
    disable_tilesgen: no

openlayers:
    # srs, center_x, center_y [required]
    srs: epsg:21781
    center_x: 600000
    center_y: 200000

cost:
    # [nb/month] [default to 10 000 000]
    request_per_layers: 10000000
    # GeoData size [Go] [default to 100]
    esb_size: 100

sns:
    topic: arn:aws:sns:eu-west-1:your-account-id:tilecloud
    region: eu-west-1
