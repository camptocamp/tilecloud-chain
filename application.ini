###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.6-branch/narr/environment.html
###

[app:app]
use = egg:tilecloud-chain
filter-with = proxy-prefix

pyramid.reload_templates = %(DEVELOPMENT)s
pyramid.debug_authorization = %(DEVELOPMENT)s
pyramid.debug_notfound = %(DEVELOPMENT)s
pyramid.debug_routematch = %(DEVELOPMENT)s
pyramid.debug_templates = %(DEVELOPMENT)s
pyramid.default_locale_name = en

c2c.base_path = /c2c

tilegeneration_configfile = %(TILEGENERATION_CONFIGFILE)s

[filter:translogger]
use = egg:Paste#translogger
setup_console_handler = False

[filter:proxy-prefix]
use = egg:PasteDeploy#prefix
prefix = %(VISIBLE_ENTRY_POINT)s

[pipeline:main]
pipeline = egg:c2cwsgiutils#client_info egg:c2cwsgiutils#sentry app

[server:main]
use = egg:waitress#main
listen = *:8080
threads = %(WAITRESS_THREADS)s
trusted_proxy = True
clear_untrusted_proxy_headers = False

###
# Logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.6-branch/narr/logging.html
###

[loggers]
keys = root, waitress, c2cwsgiutils, tilecloud, tilecloud_chain, sqlalchemy

[handlers]
keys = console, json

[formatters]
keys = generic
format = %(levelname)-5.5s [%(name)s] %(message)s

[logger_root]
level = %(OTHER_LOG_LEVEL)s
handlers = %(LOG_TYPE)s

[logger_tilecloud]
level = %(TILECLOUD_LOG_LEVEL)s
handlers =
qualname = tilecloud

[logger_tilecloud_chain]
level = %(TILECLOUD_CHAIN_LOG_LEVEL)s
handlers =
qualname = tilecloud_chain

[logger_c2cwsgiutils]
level = %(C2CWSGIUTILS_LOG_LEVEL)s
handlers =
qualname = c2cwsgiutils

[logger_sqlalchemy]
level = %(SQL_LOG_LEVEL)s
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_waitress]
level = %(WAITRESS_LOG_LEVEL)s
handlers =
qualname = waitress

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s %(name)s %(message)s

[handler_json]
class = tilecloud_chain.JsonLogHandler
args = (sys.stdout,)
level = NOTSET
